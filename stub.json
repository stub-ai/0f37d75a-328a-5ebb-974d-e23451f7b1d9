{"config":{"system_prompt":"","model":"","temperature":0,"top_p":1,"framework":"nextjs-page-tailwind"},"prompts":[{"prompt":"//@version=5\nindicator(title=\"DireccionJuan con SMA ajustable\", overlay=true)\n\n// Parámetros\nvar int period = 10\nvar color upColor = color.green\nvar color dnColor = color.red\nvar color smaColor = input(color.blue, title=\"Color de SMA\")\nvar int smaWidth = input.int(2, title=\"Grosor de SMA\", minval=1)\nvar int smaPeriods = input.int(50, title=\"Períodos de SMA\", minval=1)  // Nueva propiedad para el número de períodos de la SMA\n\n// Función personalizada para calcular la EMA al estilo de NinjaTrader\nvar float myEMA = na\nmyEMA := barstate.isfirst ? close : close * (1.0 / (1.0 + period)) + myEMA[1] * (1.0 - (1.0 / (1.0 + period)))\n\n// Funciones personalizadas para determinar la dirección de la tendencia\nisRising(series) =>\n    float diff = ta.change(series)\n    diff > 0\n\nisFalling(series) =>\n    float diff = ta.change(series)\n    diff < 0\n\n// Cálculo de SMA\nsma19 = ta.sma(close, 19)\nsma18 = ta.sma(close, 18)\nsmaCustom = ta.sma(close, smaPeriods)  // SMA con número de períodos ajustable\n\n// Condición para colorear la trama\nvar color plotColor = na\nbool risingCondition = isRising(myEMA) and isRising(sma19)\nbool fallingCondition = isFalling(myEMA) and isFalling(sma18)\nif risingCondition\n    plotColor := upColor\nelse if fallingCondition\n    plotColor := dnColor\nelse\n    plotColor := color.white // Color neutro si ninguna condición se cumple\n\n// Trama del indicador\nplot(myEMA, color=plotColor, title=\"EMA_Slope_Color\")\nplot(smaCustom, color=smaColor, linewidth=smaWidth, title=\"SMA ajustable\")  // Trama ajustable para la SMA personalizada","md5":"e415fbbdbc9d404bcd56b9f20ceaee23"}]}